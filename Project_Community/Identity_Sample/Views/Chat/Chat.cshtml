@model Identity_Sample.Hubs.ChatHub
@{
    ViewBag.Title = "Chat";
}
<h2>Chat</h2>
<div class="col-centered">

    <div id="chatDiv">
        <ul id="discussion"></ul>
    </div>

        <input style="float: right;max-width: 70px;" class="form-control btn-primary" type="button" id="sendmessage" value="Send" />

    <div style="overflow: hidden; padding-right: .5em;" class="">
        <input style="max-width: none;" class="form-control" type="text" id="message" placeholder="Write your message.." required />
    </div>

    <input type="hidden" id="displayname" value="@User.Identity.Name" />
    <input type="hidden" id="token" value="@ViewBag.Token" />
    <input type="hidden" id="timeNow" value="CurrentTime" />
    <br />
</div>
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.1.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chathub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message, CurrentTime) {
                // Add the message to the page.
                $('#discussion').append('<li>' + '<text id="oneChatLine" style="color:#6495ed;">' + htmlEncode(CurrentTime) + '</text>' + '<text> - </text>' + '<strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };

            // Get the user name and store it to prepend to messages.
            //$('#displayname').val(prompt('Enter your name:', ''));
            // Set initial focus to message input box.
            $('#message').focus();



            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {

                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val(), $('#token').val(), $('#timeNow').val());

                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();

                    // Scroll to bottom after message delivery
                    $('div#chatDiv').scrollTop($('div#chatDiv')[0].scrollHeight)
                });
            });

            window.setInterval(function () {
                var elem = document.getElementById('chatDiv');
                elem.scrollTop = elem.scrollHeight;
            }, 100);


        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }

        // Scroll to bottom of chat box when receives new message
        $('#sendmessage').click(function () {

            $('#chatDiv').animate({ scrollTop: $('#chatDiv').prop("scrollHeight") }, 500);

        });

        // Make ENTER key work as send
        $(document).ready(function () {
            $('#message').keypress(function (e) {
                if (e.keyCode == 13)
                    $('#sendmessage').click();
            });
        });
    </script>
}
